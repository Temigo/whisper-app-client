"use strict";angular.module("whisperApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ngMaterial","ui.bootstrap","angularFileUpload","ngFileUpload","d3"]).config(["$httpProvider",function(a){a.defaults.headers.common["X-Requested-With"]="XMLHttpRequest"}]).config(["$resourceProvider",function(a){a.defaults.stripTrailingSlashes=!1}]).config(["$httpProvider",function(a){a.defaults.xsrfCookieName="csrftoken",a.defaults.xsrfHeaderName="X-CSRFToken"}]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).otherwise({redirectTo:"/"})}]).factory("Graph",["$resource",function(a){var b="http://127.0.0.1:8000/graph/graphs/";return a(b,{},{query:{method:"GET",isArray:!1}})}]).factory("Infection",["$resource",function(a){var b="http://127.0.0.1:8000/graph/infections/";return a(b,{},{query:{method:"GET",isArray:!1}})}]).factory("GenerateGraph",["$resource",function(a){var b="http://127.0.0.1:8000/graph/generate/";return a(b,{},{query:{method:"GET",isArray:!1}})}]),angular.module("d3",[]).provider("d3Service",function(){function a(a,b,c){var d=a.createElement("script");d.type="text/javascript",d.async=!0,d.src="http://d3js.org/d3.v3.min.js",d.onreadystatechange=function(){"complete"===this.readyState&&b()},d.onload=b,a.getElementsByTagName("body")[0].appendChild(d)}this.$get=["$document","$q","$window","$rootScope",function(b,c,d,e){var f=c.defer();return a(b[0],function(a){e.$apply(function(){f.resolve(d.d3)})}),f.promise}]}),angular.module("whisperApp").controller("MainCtrl",["$scope","Graph","Infection","GenerateGraph","FileUploader","Upload","$timeout",function(a,b,c,d,e,f,g){a.uploadFiles=function(b,c){a.f=b,a.errFile=c&&c[0],b&&(console.log(b),angular.fromJson(b))},a.currentIndex=0,a.graphList=[],a.currentGraph=null,b.query(function(b){a.graphList=b.results,a.currentGraph=b.results[a.currentIndex].data,console.log(a.graphList)}),a.infectionList=[],a.currentInfection=null,a.currentInfectionIndex=1,c.query(function(b){a.infectionList=b.results,a.currentInfection=b.results[a.currentInfectionIndex].data}),a.parseInt=function(a){return parseInt(a,10)},a.setCurrentIndex=function(b){a.currentGraph=a.graphList[b].data},a.setCurrentInfectionIndex=function(b){a.currentInfection=a.infectionList[b].data},a.generateGraph=function(b,c,e){e="undefined"!=typeof e?e:!1,d.query({generateMethod:b,n:c},function(b){e?a.currentInfection=b:a.currentGraph=b})},a.addNode=function(){var b=angular.fromJson(a.currentGraph),c=b.nodes.length;b.nodes.push({id:c+1}),a.currentGraph=angular.toJson(b),console.log(a.currentGraph)},a.addEdge=function(){}}]).directive("d3graph",["d3Service",function(a){var b=500,c=500;return{restrict:"EA",scope:{data:"=graphData",infectionData:"=infectionData"},link:function(d,e,f){a.then(function(a){var f=a.scale.category20(),g=a.layout.force().charge(-120).linkDistance(50).size([b,c]),h=a.select(e[0]).append("svg").attr("height",c).call(a.behavior.zoom().on("zoom",function(){h.attr("transform","translate("+a.event.translate+") scale("+a.event.scale+")")})).style("width","100%");d.$watchGroup(["data","infectionData"],function(b,c){if(h.selectAll("*").remove(),b){var d=angular.fromJson(b[0]),e=d.nodes,i=d.links,j=angular.fromJson(b[1]).nodes;for(var k in e)k in j?e[k].infected=!0:e[k].infected=!1;g.nodes(e).links(i).start();var l=h.selectAll(".link").data(i).enter().append("line").attr("class","link").style("stroke-width",function(a){return 1}),m=function(b){a.select(this).style("fill","red")},n=1,o=h.selectAll(".node").data(e).enter().append("circle").attr("class","node").attr("r",8).style("fill",function(a){return n=a.infected?0:1,f(n)}).call(g.drag).on("click",m);g.on("tick",function(){l.attr("x1",function(a){return a.source.x}).attr("y1",function(a){return a.source.y}).attr("x2",function(a){return a.target.x}).attr("y2",function(a){return a.target.y}),o.attr("cx",function(a){return a.x}).attr("cy",function(a){return a.y})})}})})}}}]).controller("existingGraphCtrl",["$scope",function(a){a.watch("currentIndex",function(b,c){b!==c&&(a.currentGraph=a.graphList[b].data)})}]),angular.module("whisperApp").run(["$templateCache",function(a){a.put("views/main.html",'<div class="col-md-4"> <!-- Graph --> <div class="panel panel-default"> <div class="panel-heading"> <h3 class="panel-title">Graph : {{ currentIndex }}</h3> </div> <div class="panel-body"> <uib-tabset> <uib-tab> <uib-tab-heading> Nouveau </uib-tab-heading> <uib-accordion close-others="oneAtATime"> <uib-accordion-group is-open="status.open"> <uib-accordion-heading> <h4 class="panel-title"> <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne"> <span class="glyphicon glyphicon-download-alt" aria-hidden="true"></span> Importer </a> <i class="glyphicon pull-right" ng-class="{\'glyphicon-chevron-down\': status.open, \'glyphicon-chevron-right\': !status.open}"></i> </h4> </uib-accordion-heading> <form class="form-horizontal" enctype="multipart/form-data"> <!--{% csrf_token %}--> <!--<input type="file" nv-file-select uploader="uploader" name="import_graph" accept="application/*"/>\n							<ul>\n								<li ng-repeat="item in uploader.queue">\n									<span ng-bind="item.file.name"></span><br/>\n									<button class="btn btn-default" ng-click="item.upload()">Upload</button>\n								</li>\n							</ul>--> <!--<input type="file" ng-model="upload.src"/>\n							<button class="btn btn-default" type="submit">Upload</button>\n							File : {{upload.src}}--> <!--<button type="file" ngf-select="uploadFiles($file, $invalidFiles)">Upload</button>\n							{{f}}--> Coming soon </form> </uib-accordion-group> <uib-accordion-group is-open="status.open2"> <uib-accordion-heading> <h4 class="panel-title"> <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo"> <span class="glyphicon glyphicon-cog" aria-hidden="true"></span> Générer </a> <i class="glyphicon pull-right" ng-class="{\'glyphicon-chevron-down\': status.open2, \'glyphicon-chevron-right\': !status.open2}"></i> </h4> </uib-accordion-heading> <form class="form-horizontal" ng-submit="generateGraph(generationMethod, generateN)"> <!--{% csrf_token %}--> <select class="form-control" name="generate_method" ng-model="generationMethod"> <option value="1">Complete graph</option> <option value="2">Cycle graph</option> <option value="3">Circular ladder graph</option> <option value="4">Dorogovtsev_goltsev_mendes graph</option> <option value="5">Empty graph</option> <option value="6">Hypercube graph</option> <option value="7">Ladder graph</option> <option value="8">Path graph</option> <option value="9">Star graph</option> <option value="10">Wheel graph</option> </select> <div class="input-group"> <span class="input-group-addon" id="sizing-addon">Valeur de n</span> <input ng-model="generateN" id="generate_n" name="generate_n" type="number" class="form-control" aria-describedby="sizing-addon"> </div> <button class="btn btn-default" type="submit">OK</button> </form> </uib-accordion-group> <uib-accordion-group is-open="status.open3"> <uib-accordion-heading> <h4 class="panel-title"> <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseThree" aria-expanded="false" aria-controls="collapseThree"> <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Créer </a> <i class="glyphicon pull-right" ng-class="{\'glyphicon-chevron-down\': status.open3, \'glyphicon-chevron-right\': !status.open3}"></i> </h4> </uib-accordion-heading> Coming soon ! </uib-accordion-group> </uib-accordion></uib-tab> <uib-tab> <uib-tab-heading> Existant </uib-tab-heading> <form class="form-horizontal"> <!-- {% csrf_token %} --> <div class="form-group"> <label for="graph_id" class="col-sm-2 control-label">Graph</label> <div class="col-sm-10"> <select class="form-control" name="graph_id" ng-model="currentIndex" ng-options="parseInt(index) as graph.name for (index, graph) in graphList" ng-change="setCurrentIndex(currentIndex)"> <!--<option value="">Choisir</option>--> </select> <p ng-if="graphList === []">No graphs are available.</p> Index : {{currentIndex}} </div> </div> </form> </uib-tab> </uib-tabset> </div> <div class="text-center"> <form class="form-horizontal" method="post" action="/graph/export/graph/"> <!--{% csrf_token %}--> <div class="form-actions"> <button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-download" aria-hidden="true"></span> Export Graph (JSON)</button> </div> </form> </div> </div> <!-- Infection --> <div class="panel panel-default"> <div class="panel-heading"><h3 class="panel-title">Infection {{currentInfectionIndex}} for graph {{currentIndex}}</h3></div> <div class="panel-body"> <uib-tabset> <uib-tab> <uib-tab-heading> Nouveau </uib-tab-heading> <uib-accordion> <uib-accordion-group is-open="status.open4"> <uib-accordion-heading> <h4 class="panel-title"> <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseOneInfection" aria-expanded="true" aria-controls="collapseOneInfection"><span class="glyphicon glyphicon-download-alt" aria-hidden="true"></span> Importer</a> <i class="glyphicon pull-right" ng-class="{\'glyphicon-chevron-down\': status.open4, \'glyphicon-chevron-right\': !status.open4}"></i> </h4> </uib-accordion-heading> <!--<form class="form-horizontal" method="post" action="/graph/import/infection" enctype="multipart/form-data">\n							<input type="file" name="import_infection" accept="application/*"/>\n							<button class="btn btn-default" type="submit">OK</button>\n						</form>--> Coming soon </uib-accordion-group> <uib-accordion-group is-open="status.open5"> <uib-accordion-heading> <h4 class="panel-title"> <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo"> <span class="glyphicon glyphicon-cog" aria-hidden="true"></span> Générer </a> <i class="glyphicon pull-right" ng-class="{\'glyphicon-chevron-down\': status.open5, \'glyphicon-chevron-right\': !status.open5}"></i> </h4> </uib-accordion-heading> <form class="form-horizontal" ng-submit="generateGraph(generationInfectionMethod, generateInfectionN, true)"> <!--{% csrf_token %}--> <select class="form-control" name="generate_method" ng-model="generationInfectionMethod"> <option value="1">Complete graph</option> <option value="2">Cycle graph</option> <option value="3">Circular ladder graph</option> <option value="4">Dorogovtsev_goltsev_mendes graph</option> <option value="5">Empty graph</option> <option value="6">Hypercube graph</option> <option value="7">Ladder graph</option> <option value="8">Path graph</option> <option value="9">Star graph</option> <option value="10">Wheel graph</option> </select> <div class="input-group"> <span class="input-group-addon" id="sizing-addon">Valeur de n</span> <input ng-model="generateInfectionN" id="generate_n" name="generate_n" type="number" class="form-control" aria-describedby="sizing-addon"> </div> <input type="hidden" name="request" value="new_graph"> <button class="btn btn-default" type="submit">OK</button> </form> </uib-accordion-group> </uib-accordion> </uib-tab> <uib-tab> <uib-tab-heading> Existant </uib-tab-heading> <form class="form-horizontal"> <!-- {% csrf_token %} --> <div class="form-group"> <label for="infection_id" class="col-sm-2 control-label">Infection</label> <div class="col-sm-10"> <select class="form-control" name="infection_id" ng-model="currentInfectionIndex" ng-options="parseInt(index) as infection.name for (index, infection) in infectionList" ng-change="setCurrentInfectionIndex(currentInfectionIndex)"> <!--<option value="">Choisir</option>--> </select> <p ng-if="infectionList === []">No infection graphs are available.</p> </div> </div> </form> </uib-tab> </uib-tabset> <!-- Export infection --> <div class="text-center"> <form class="form-horizontal" method="post" action="/graph/export/infection/"> <!--{% csrf_token %}--> <div class="form-actions"> <button type="submit" class="btn btn-primary"> <span class="glyphicon glyphicon-download" aria-hidden="true"></span> Export Infection (JSON) </button> </div> </form> </div> </div> </div> <!-- Algorithm --> <div class="panel panel-default"> <div class="panel-heading"><h3 class="panel-title">Choose Algorithm</h3></div> <div class="panel-body"> <div class="text-center"> <!--<form class="form-horizontal" method="post" action="/graph/import/algorithm/" enctype="multipart/form-data">\n				<div class="form-actions">\n					<input type="file" name="import_algorithm" accept="application/*"/>\n					<button type="submit" class="btn btn-primary">\n						<span class="glyphicon glyphicon-download" aria-hidden="true"></span>\n						Import Algorithm (*.py)\n					</button>\n				</div>\n			</form>--> Coming soon </div> </div> </div> </div> <!-- Canvas with graph drawing --> <div class="col-md-7" id="canvas" style="position:relative"> {{currentGraph}} <!--<md-fab-toolbar md-direction="left">\n		<md-fab-trigger>\n			<md-button class="md-fab md-primary">\n				<md-icon>settings</md-icon>\n			</md-button>\n		</md-fab-trigger>\n		<md-toolbar>\n			<md-fab-actions class="md-toolbar-tools">\n				<md-button class="md-icon-button">\n					<md-icon>control_point</md-icon>\n				</md-button>\n			</md-fab-actions>\n		</md-toolbar>\n	</md-fab-toolbar>--> <md-fab-speed-dial class="md-fling md-fab-top-right" md-direction="left"> <md-fab-trigger> <md-button class="md-fab md-primary"> <md-tooltip md-direction="top">Settings</md-tooltip> <md-icon>settings</md-icon> </md-button> </md-fab-trigger> <!--<md-toolbar>--> <md-fab-actions> <md-button class="md-fab md-raised md-mini" ng-click="addNode()"> <md-tooltip md-direction="top">Add a node</md-tooltip> <md-icon>add</md-icon> </md-button> <md-button class="md-fab md-raised md-mini" ng-click="addEdge()"> <md-tooltip md-direction="top">Add an edge</md-tooltip> <md-icon>timeline</md-icon> </md-button> </md-fab-actions> <!--</md-toolbar>--> </md-fab-speed-dial> <d3graph graph-data="currentGraph" infection-data="currentInfection"></d3graph> </div> ')}]);